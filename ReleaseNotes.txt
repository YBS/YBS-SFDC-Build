YBS Build Release Notes
-----------------------

v48.2:
    - Updated support for installed packages.  To include Managed Packages in the build make the following updates:
        - Set sf.includeInstalledPackages=true in salesforce.properties
        - Update includePackage.xml to add a section with <type>InstalledPackage</type> and then add a <members> tag for
          each namespace that you want to include.
    - Fixed support for Custom Metadata
    
v48.1:
    - Added following Metadata Types/Properties:
        - LightningComponentBundle / sf.includeLightningComponentBundles
        - RecordActionDeployment / sf.includeRecordActionDeployments

v48.0:
	- Updated build to use API version 48.0 (Spring '20)
	- This version required Java 11 or later - must upgrade
	- The login.properties sf.serverurl property has been updated to no longer require the API
	  version.  The new format should just be the domain name which should be one of the following two values:
		https://test.salesforce.com
		https://login.salesforce.com
	- The sf.ignore* and sf.package.ignore* statements in salesforce.properties are being replaced with a new
	  ignorePackage.xml file.  The first time you do a retrieve with this build it will create the ignorePackage.xml
	  file based on the current settings in salesforce.properties.  You can then commit the ignorePackage.xml and remove
	  the ignore statements from the salesforce.properties file.
	- You are now able to specifically list out the metadata members you want to include for a specific type by using
	  creating an includePackage.xml file.  Any types listed in that file that have members will only include those
	  members in the retrieve and all other members in the org will be ignored without requiring an ignore statement.
	- The CustomObject include/ignore logic has been updated to remove all related object components from the package.xml
	  file if a CustomObject is either not included or ignored.  You should now just need to include/ignore the CustomObject and
	  all other related members will be removed.
	- A new excludedPackage.xml file will be generated with each package.xml to show those metadata members which would normally
	  have been in the package.xml but are being excluded due to the include/ignore logic.  This is used so that you can review
	  members that have been excluded which you may want to include.  This file is being ignored in the .gitignore file by default
	  to prevent issues due to differences between Production and Sandbox environments.
	- The CreatePackageXml process has been refactored to try to simplify the maintenance of the code.  The
	  List Metadata calls have been updated to batch them in groups of 3.  The Create Package XML output has been
	  updated to include the # of components added for each type.
	- The DataLoader functions have been moved from the build.xml file to a new data/build.xml file and the DataLoader.jar
	  file has been moved from lib to data/lib to prevent conflicts.  You should make the following updates to your local build
	  directory:
			- Update build.xml
			- Copy new data/build.xml
			- Remove lib/DataLoader.jar
			- Copy data/lib/DataLoader.jar
	- The following Metadata Types/Properties were removed because they are no longer supported:
        - EventDelivery / sf.includeEventDeliveries
        - EventSubscription / sf.includeEventSubscriptions
    - Added following Metadata Types/Properties:
        - ExperienceBundle / sf.includeExperienceBundles

v45.2a:
	- Fix PostRetrieveProcessor to add cleanDocument statements to prevent extra blank lines with Java 11
	
v45.2:
	- Added the following additional post-retrieve processing sorting:
		- Layout: platformActionListItems
		- Custom Field dependent picklist values: controllingFieldValue and valueSettings
		- Workflow: workflowTimeTriggers
	  
v45.1a:
	- Fix PostRetrieveProcessor to add cleanDocument statements to prevent extra blank lines with Java 11
	
v45.1:
	- Updated post-retrieve processing to sort application overrides in customApplication metadata to
	  prevent artifacts from different environments since Salesforce does not consistently sort by these
	  attributes.
	  
v45.0:
	- Updated build to use API version 45.0 (Spring '19)
		- Except for DataLoader.jar because there is no v45.0 for DataLoader yet
	- Updated List Metadata call to retry once before failing
	
v44.1:
	- Fixed DataLoader encrypted password update that was preventing data tasks from completing. 
	  The issue was that some version of the DataLoader JAR file after 37.0 starting putting a line
	  of text with the encrypted password which prevented the job from reading the password during
	  the import/export.  We are now stripping out that extra line of text from the process-conf.xml file.
	  
v44.0:
    - Updated build to use API version 44.0 (Winter '19)
    - Added the following Metadata Types/Properties:
        - Audience / sf.includeAudiences
        - LightningExperienceTheme / sf.includeLightningExperienceThemes
    - Updated Flow logic to pull in file names instead of using "*"
    
v43.1
    - Added sf.includeCompactLayouts to salesforce.properties and updated Compact Layouts
        logic to include the Compact Layouts in package.xml
    - Fixed sf.includeSessionSessionSettings to sf.includeProfileSessionSettings

v43.0
    - Updated build to use API version 43.0 (Summer '18)
    - Added following Metadata Types/Properties:
        - Bot / sf.includeBots
        - BotVersion / sf.includeBotVersions
        - BrandingSet / sf.includeBrandingSets
        - CaseSubjectParticle / sf.includeCaseSubjectParticles
        - Certificate / sf.includeCertificates
        - ChatterExtension / sf.includeChatterExtensions
        - CleanDataService / sf.includeCleanDataService
        - CMSConnectSource / sf.includeCMSConnectSources
        - CommunityTemplateDefinition / sf.includeCommunityTemplateDefinitions
        - CommunityThemeDefinition / sf.includeCommunityThemeDefinitions
        - ContentAsset / sf.includeContentAssets
        - CorsWhitelistOrigin / sf.includeCORSWhitelistOrigins
        - CustomFeedFilter / sf.includeCustomFeedFilters
        - CustomMetadata / sf.includeCustomMetadata
        - DelegateGroup / sf.includeDelegateGroups
        - DuplicateRule / sf.includeDuplicateRules
        - EclairGeoData / sf.includeAnalyticMapCharts
        - EmailServicesFunction / sf.includeEmailServicesFunctions
        - EmbeddedServiceBranding / sf.includeEmbeddedServiceBrandings
        - EmbeddedServiceConfig / sf.includeEmbeddedServiceConfigs
        - EmbeddedServiceLiveAgent / sf.includeEmbeddedServiceLiveAgents
        - EntitlementProcess / sf.includeEntitlementProcesses
        - EventDelivery / sf.includeEventDeliveries
        - EventSubscription / sf.includeEventSubscriptions
        - ExternalServiceRegistration / sf.includeExternalServiceRegistrations
        - FileUploadAndDownloadSecuritySettings / sf.includeFileUploadAndDownloadSecuritySettings
        - GlobalValueSet / sf.includeGlobalValueSets
        - GlobalValueSetTranslation / sf.includeGlobalValueSetTranslations
        - KeywordList / sf.includeKeywordLists
        - LightningBolt / sf.includeLightningBolts
        - LiveChatSensitiveDataRule / sf.includeLiveChatSensitiveDataRules
        - ManagedTopics / sf.includeManagedTopics
        - MIDomain / sf.includeMIDomains
        - ModerationRule / sf.includeModerationRules
        - NetworkBranding / sf.includeNetworkBrandings
        - OrgPreferenceSettings / sf.includeOrgPreferenceSetting
        - ProfilePasswordPolicy / sf.includeProfilePasswordPolicies
        - ProfileSessionSetting / sf.includeProfileSessionSettings
        - SearchSettings / sf.includeSearchSettings
        - SocialCustomerServiceSettings / sf.includeSocialCustomerServiceSettings
        - StandardValueSet / sf.includeStandardValueSets
        - Territory2 / sf.includeTerritories2
        - Territory2Model / sf.includeTerritory2Models
        - Territory2Rule / sf.includeTerritory2Rules
        - Territory2Type / sf.includeTerritory2Types
        - Territory2Settings / sf.includeTerritory2Settings
        - TopicsForObjects / sf.includeTopicsForObjects
        - TransactionSecurityPolicy / sf.includeTransactionSecurityPolicies
        - WaveApplication / sf.includeWaveApplications
        - WaveDashboard / sf.includeWaveDashboards
        - WaveDataflow / sf.includeWaveDataflows
        - WaveDataset / sf.includeWaveDatasets
        - WaveLens / sf.includeWaveLenses
        - WaveTemplateBundle / sf.includeWaveTemplateBundles
        - WaveXmd / sf.includeWaveXmds
        
    - Removed following Metadata Types/Properties:
        - ChatterAnswersSettings / sf.includeChatterAnswersSettings
    
    - Fixed following Metadata Types/Properties:
        - LeadConvertSettings / sf.includeLeadConvertSettings
        - LiveChatButton / sf.includeLiveChatButtons
        - LiveChatDeployment / sf.includeLiveChatDeployments
    

v37.7:
    - Added new 'sf.package.ignore' property prefix to allow specific Managed Packages
      to be ignored from the build.  Add a semi-colon delimited list of namespace values
      to ignore them from the build.
      Only the YBS-ant.jar needs to be updated for this version update along with setting
      sf.package.ignore property if you want to ignore some packages.
          
v37.6:
    - Updated PermissionSet retrieve to use SOQL in order to filter out Managed Package
      Permission Sets that began to appear after Spring '17 release.
      Only the YBS-ant.jar needs to be updated for this version update.
          
v37.5:
    - Updated deploy and testDeploy to use new testLevel property instead of old
      runAllTests property to give better control on which tests to run.  The following
      files were updated with this version:  YBS-ant.jar (for BUILD_VERSION), build.xml,
      and samplelogin.properties.
        - Replace the runTests=false with testLevel=NoTestRun in all login.properties
          files to keep the same behavior
      
v37.4:
    - Updated filtering of Custom Fields to allow standard fields to be ignored and
      removed from the build.
      
v37.3:
    - Replaced "sf.includeManagedPackages" true/false setting with new 
      "sf.includeManagedPackageTypes" setting as a semi-colon delimited list of
      metadata types to include for managed packages.  Here is a sample of how it can
      be used:
        sf.includeManagedPackageTypes=ApexPage;CustomObject;CustomField;RecordType;CustomApplication;CustomTab;Document
        
    - Added new sf.includeXXXFolders properties to allow a semi-colon delimited list of
      folder API names to be used to specify a list of folders instead of using just a
      Prefix.  Here are the new properties:
            sf.includeDocumentsFolders
            sf.includeDashboardsFolders
            sf.includeReportsFolders
            sf.includeEmailsFolders

    - Updated folders based metadata calls to support managed packages, however this only
      works for retrieves and not deploys.  Salesforce does not allow you create new
      components in a different namespace so you cannot use this process to move
      managed package components.  However, you should be able to move components added to
      a managed package folder that are not in the managed package namespace (i.e. components
      that you added to a managed package folder) - however, this has not been tested.
      
v37.2:
    - Added more objects (applications, tabs, etc...) to include from Managed Packages
      if the sf.includeManagedPackages property is set.  This allows those objects
      to have their profile settings managed through the build.
    
    - Updated layout retrieve to use list metadata to allow non-object layouts like 
      CaseClosed to be managed.
      
    - Added documentObjectTranslations target to document the translation overrides.

v37.1:
    - Included new "sf.includeManagedPackages" setting in salesforce.properties to
      control whether managed package components should be included (defaults to false).
    
    - Fixed filter of CustomFields from objects, permission sets and profiles to
      filter if CustomField is actually custom (ends with __c) and is not in package.xml.
      This fixes issues where picklists were still in object definition and removes
      field level security for fields that are being ignored.  This also results in 
      all standard fields being included in object definitions (they were in field
      level security).
      
    - Updated build to switch retrieve of some metadata components to use Tooling API
      instead of List Metadata calls.
    
    - Added log statements during createPackageXml to show progress and timings
    
    - Changed behavior of following types:
        - sf.includeLabels now using CustomLabel Metadata type instead of CustomLabels type
          which allows each label to be individually listed in package.xml.
    
v37.0:
    - Updated build lib files to use API Version 37.0 (Summer '16)
    
    - Added confirmation input for deploy and import.
    
    - Implemented documentObjectFields to create a CSV file with
      documentation related to an objects fields (type, description, created date,
      layouts, field trip, etc...).  Use following syntax to run:
        ant documentObjectFields -Dsf.objectApiName=Account
    
    - To upgrade a v35.1 build directory to v37.0, copy the following files to the
      build directory:
            build.xml
            lib/DataLoader.jar
            lib/YBS-ant.jar
            lib/ant-salesforce.jar
            lib/force-wsc.jar
            lib/metadata.jar
            lib/partner.jar
            lib/tooling.jar
            samplelogin.properties
            xsl/ProfileRecordTypeVisibilities.xsl
            xsl/StateCountryPicklistValues.xsl
      Then update the login.properties file to use API 37.0 and do an "ant install" to
      install the updated jar files.

v35.1:
	- Updated build to use latest version (35.X) of DataLoader.  The new DataLoader.jar conflicts
		with the other JAR files that are being copied to the ant.home/lib directory.  The
		DataLoader.jar file isn't actually needed in the ant.home/lib directory (it is always
		referenced from the project lib directory) so it has been excluded from the ant install
		target.  If you have a copy of DataLoader.jar (old or new) in ant.home/lib please manually
		delete it.
		
	- Updated all of the build files in preparation for initial public release.  Cleaned up several
		classes and the build.xml script.
	
	- Updated the YBS-ant.jar file to also connect using the Tooling API in preparation for future
		updates.  This required removing most of the WSC related classes from the ant-salesforce.jar
		file to prevent conflicts with current versions (which are now supplied in separate force-wsc.jar, 
		metadata.jar, partner.jar, and tooling.jar files).
	
	- If you have an existing project you will want to replace the following files/directories with
		the current versions that are under the sfdc directory:
			- build.xml
			- lib/ directory (remove all files and replace with current versions)
			- data/config/ directory (remove all files and replace with current versions) 
	
v35.0:
	- Updated build to use API version 35.0 (Winter '16)
	
	- Added the following meta-data include settings for salesforce.properties
		- sf.includeActionLinkGroupTemplates
		- sf.includeAuraDefinitionBundles  (i.e. Lightning Bundles)
		- sf.includeCustomPermissions
		- sf.includeMatchingRules
		- sf.includeNamedCredentials
		- sf.includeLeadConvertSettings
		- sf.includeNameSettings
		- sf.includePathAssistantSettings
		- sf.includePathAssistants
		- sf.includePlatformCachePartitions
		- sf.includeSharingRules (replaced old individual sharing rules removed)
		- sf.includeSynonymDictionary
	
	- Removed the following old meta-data include settings for salesforce.properties:
		- sf.includeAccountSharingRules
		- sf.includeCampaignSharingRules
		- sf.includeCaseSharingRules
		- sf.includeContactSharingRules
		- sf.includeCustomObjectSharingRules
		- sf.includeLeadSharingRules
		- sf.includeOpportunitySharingRules
		- sf.includeUserSharingRules
	
	- Added new sf.excludeUserPermissions property in salesforce.properties to allow a
		semi-colon (;) delimited list of userPermissions to remove from profiles.  We were
		using a hard-coded list in the code of permissions to remove but now this is 
		dynamic.  To keep the same functionality you would need to add the following to
		salesforce.properties:
		
			sf.excludeUserPermissions=EditBillingInfo;ManageUnlistedGroups;AllowUniversalSearch;ViewCaseInteraction
			
		You will probably want to add the new ManageSandboxes permission since it is only 
		available in Production environments and not in Sandboxes (which prevents a deploy).
		The suggested default value of this property is:
		
			sf.excludeUserPermissions=EditBillingInfo;ManageUnlistedGroups;AllowUniversalSearch;ViewCaseInteraction;ManageSandboxes
	
	- Updated the ignore logic to require the TypeName prepended to the element name in each
		ignore item.  The old format was:
		
			sf.ignore.XXX=Profile1;Profile2;Profile3
			
		But the new format must have the "TypeName." prepended to distinguish each
		Metadata Type:
		
			sf.ignore.XXX=Profile.Profile1;Profile.Profile2;Profile.Profile3
			
		The reason for this change is because there can be cases where two different
		Metadata elements may have the same fullName but can be different types.  If you
		ignored one of the fullNames you would ignore both of them.
		
	- Logic Updates:
		- Added missing logic for existing sf.includeChatterAnswersSettings property
		
		- Removed references to usernameSuffix logic which is no longer needed (it was
			used to fix usernames for prod/sandbox versions but that is now done by
			the retrieve/deploy tasks).
			
		- Removed the specialized logic for the Publisher Actions (QuickAction).  There
			was a bug in the meta data API that prevented the object name from coming back
			as the prefix in the fullName field for actions that are object-based.  For example,
			an action named 'NewChildCase' on the 'Case' object would come back with a 
			fullName of 'NewChildCase' instead of 'Case.NewChildCase'.  However, the value
			in package.xml would need to be 'Case.NewChildCase' for the retrieve to work.
			We had added a special 'sf.quickAction' property prefix to allow you to 
			specify the Publisher Actions you wanted to include instead of doing a listMetadata
			call to the get the full list.  This bug has now been fixed so we can use the
			listMetadata call and treat Publisher Actions just like other meta-data where
			we do a retrieve and get all them and then exclude any that are ignored.
		