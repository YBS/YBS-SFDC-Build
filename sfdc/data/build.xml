<?xml version="1.0"?>
<!--
Copyright (c) 2015 Yellow Brick Systems LLC

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

	build.xml
	
	This is a generic build.xml file that can be used to perform data loader actions.
	The user credentials are set in the login.properties file.
	
	See the projectbuild.xml file for the project specific targets.
	
	Author:  Jeff Bohanek (jeff@yellowbricksystems.com)
-->
<project name="ybsSalesforceDataBuild" default="usage" basedir=".">
	
	<description>This is the default Yellow Brick Systems Salesforce data build script.</description>
	
	<!--  Import the project data related targets from the projectbuild.xml script -->
	<import file="projectbuild.xml" as="project" optional="true"/>
	
	<!--  Property files that control build behavior  -->
	<property file="${basedir}/login.properties"/>
	
	<property name="build.lib.dir" value="${basedir}/lib"/>
	<property name="tmp.dir" value="${basedir}/tmp"/>
	
	<!-- Initialize project -->
	<target name="init">
		<tstamp>
			<format property="build.timestamp" pattern="yyyy-MM-dd-HH-mm-ss-SSS"/>
			<format property="deploy.timestamp" pattern="M/d/yyyy h:mm a"/>
		</tstamp>
		
		<echo>Encrypting the password for DataLoader....</echo>
		<property file="login.properties"/>
		<java outputproperty="encryptedpassword" classname="com.salesforce.dataloader.security.EncryptionUtil" classpath="lib/DataLoader.jar" failonerror="true">
			<sysproperty key="log4j.configuration" value="file:config/log4j.xml"/>
			<arg value="-e"/>
			<arg value="${sf.password}"/>
			<arg value="config/key.txt"/>
		</java>
	</target>
	
	<!--
		[exportdata]
			This macro is used by projectbuild.xml targets to create tasks to export
			data from Salesforce.
	-->
	<macrodef name="exportdata">
		<attribute name="file"/>
		<attribute name="object"/>
		<element name="soql"/>
		<sequential>
			<string id="soqlstring"><soql/></string>
			<echo message="Exporting @{object}"/>
			<mkdir dir="exports"/>
		
			<copy file="config/template-process-conf.xml" tofile="config/process-conf.xml" overwrite="true" failonerror="true"/>
			<replace file="config/process-conf.xml">
				<replacefilter token="_endpoint_" value="${sf.serverurl}"/>
				<replacefilter token="_username_" value="${sf.username}"/>
				<replacefilter token="_password_" value="${encryptedpassword}"/>
				<replacefilter token="_object_" value="@{object}"/>
				<replacefilter token="_soql_" value="${toString:soqlstring}"/>
				<replacefilter token="_file_" value="exports/@{file}.csv"/>
				<replacefilter token="_keyfile_" value="config/key.txt"/>
			</replace>
			<!-- New versions of Data Loader put text before the encrypted password and we need to remove it -->
			<replace file="config/process-conf.xml">
				<replacetoken><![CDATA[The output string of encryption is: 
]]></replacetoken>
				<replaceValue></replaceValue>
			</replace>
		
			<java classname="com.salesforce.dataloader.process.ProcessRunner" classpath="lib/DataLoader.jar" failonerror="true" fork="true">
				<sysproperty key="salesforce.config.dir" value="config"/>
				<arg line="process.name=export@{object}"/>
			</java>
		</sequential>
	</macrodef>
	
	<!--
		[importdata]
			This macro is used by projectbuild.xml targets to create tasks to import
			data to Salesforce.
	-->
	<macrodef name="importdata">
		<attribute name="file"/>
		<attribute name="object"/>
		<attribute name="mappingfile"/>
		<attribute name="externalid"/>
		<sequential>
		<echo message="Importing @{object} using ${sf.username}"/>
        <input
            message="Are you sure you want to continue (y/n)?"
            validargs="y,n"
            addproperty="do.import"
        />
        <condition property="do.abort">
            <equals arg1="n" arg2="${do.import}"/>
        </condition>
        <fail if="do.abort">Build aborted by user.</fail>
		<delete dir="tmp/exports"/>
		<mkdir dir="tmp/exports"/>
		<copy file="config/template-process-conf.xml" tofile="config/process-conf.xml" overwrite="true" failonerror="true"/>
		<replace file="config/process-conf.xml">
			<replacefilter token="_endpoint_" value="${sf.serverurl}"/>
			<replacefilter token="_username_" value="${sf.username}"/>
			<replacefilter token="_password_" value="${encryptedpassword}"/>
			<replacefilter token="_object_" value="@{object}"/>
			<replacefilter token="_soql_" value="@{soql}"/>
			<replacefilter token="_file_" value="exports/@{file}.csv"/>
			<replacefilter token="_keyfile_" value="config/key.txt"/>
			<replacefilter token="_mappingfile_" value="mappings/@{mappingfile}.sdl"/>
			<replacefilter token="_externalid_" value="@{externalid}"/>
		</replace>
		<!-- New versions of Data Loader put text before the encrypted password and we need to remove it -->
		<replace file="config/process-conf.xml">
			<replacetoken><![CDATA[The output string of encryption is: 
]]></replacetoken>
			<replaceValue></replaceValue>
		</replace>
			
		<java classname="com.salesforce.dataloader.process.ProcessRunner" classpath="lib/DataLoader.jar" failonerror="true" fork="true">
			<sysproperty key="salesforce.config.dir" value="config"/>
			<arg line="process.name=import@{object}"/>
		</java>
		</sequential> 
	</macrodef>

	<!-- Default target  -->
	<target name="usage">
		<echo>
Please refer to the projectbuild.xml file for the targets that are supported.

		</echo>
	</target>
</project>
